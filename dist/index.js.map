{"version":3,"sources":["../src/index.js"],"names":["taggedTable","strings","args","rowStrings","String","raw","split","filter","v","topLine","cleanString","replace","fields","argsIdx","slice","map","row","rowDataArr","str","trim","reduce","acc","curr","idx"],"mappings":";;;;;;;AAAe,SAASA,WAAT,CAAqBC,OAArB,EAAkE;AAAA,oCAAvBC,IAAuB;AAAvBA,IAAAA,IAAuB;AAAA;;AAC/E,MAAMC,UAAU,GAAGC,MAAM,CAACC,GAAP,CAAWJ,OAAX,EAChBK,KADgB,CACV,IADU,EAEhBC,MAFgB,CAET,UAAAC,CAAC;AAAA,WAAIA,CAAJ;AAAA,GAFQ,CAAnB;AAIA,MAAMC,OAAO,GAAGN,UAAU,CAAC,CAAD,CAA1B;AACA,MAAMO,WAAW,GAAGD,OAAO,CAACE,OAAR,CAAgB,KAAhB,EAAuB,EAAvB,CAApB;AACA,MAAMC,MAAM,GAAGF,WAAW,CAACJ,KAAZ,CAAkB,GAAlB,CAAf;AACA,MAAIO,OAAO,GAAG,CAAd;AAEA,SAAOV,UAAU,CAACW,KAAX,CAAiB,CAAjB,EAAoB,CAAC,CAArB,EAAwBC,GAAxB,CAA4B,UAAAC,GAAG,EAAI;AACxC,QAAMC,UAAU,GAAGD,GAAG,CAACV,KAAJ,CAAU,GAAV,EAAeS,GAAf,CAAmB,UAAAG,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KAAtB,CAAnB;AAEA,WAAOF,UAAU,CAACG,MAAX,CAAkB,UAACC,GAAD,EAAMC,IAAN,EAAYC,GAAZ,EAAoB;AAC3C,UAAID,IAAI,KAAK,EAAb,EAAiB;AACfD,QAAAA,GAAG,CAACT,MAAM,CAACW,GAAD,CAAP,CAAH,GAAmBrB,IAAI,CAACW,OAAD,CAAvB;AACAA,QAAAA,OAAO,IAAI,CAAX;AACD,OAHD,MAGO;AACLQ,QAAAA,GAAG,CAACT,MAAM,CAACW,GAAD,CAAP,CAAH,GAAmBD,IAAnB;AACD;;AAED,aAAOD,GAAP;AACD,KATM,EASJ,EATI,CAAP;AAUD,GAbM,CAAP;AAcD","sourcesContent":["export default function taggedTable(strings: string[], ...args: any[]): Object[] {\n  const rowStrings = String.raw(strings)\n    .split(\"\\n\")\n    .filter(v => v);\n\n  const topLine = rowStrings[0];\n  const cleanString = topLine.replace(/\\s/g, \"\");\n  const fields = cleanString.split(\"|\");\n  let argsIdx = 0;\n\n  return rowStrings.slice(1, -1).map(row => {\n    const rowDataArr = row.split(\"|\").map(str => str.trim());\n\n    return rowDataArr.reduce((acc, curr, idx) => {\n      if (curr === \"\") {\n        acc[fields[idx]] = args[argsIdx];\n        argsIdx += 1;\n      } else {\n        acc[fields[idx]] = curr;\n      }\n\n      return acc;\n    }, {});\n  })\n}\n"],"file":"index.js"}